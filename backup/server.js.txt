import express from 'express';
import { Low } from 'lowdb';
import { JSONFile } from 'lowdb/node';
import path from 'path';
import { fileURLToPath } from 'url';

// Dados padrão para inicialização
const defaultData = {
  categories: [
    {
      id: 1,
      name: "Conhecimentos Gerais",
      description: "Teste seus conhecimentos sobre diversos assuntos.",
      image: "/categorias/Conhecimentos_gerais.svg", // Caminho relativo para a imagem
      questionCount: 15
    },
    {
      id: 2,
      name: "Ciências",
      description: "Questões de biologia, química, física e geociências.",
      image: "/categorias/Ciencias.svg", // Caminho relativo para a imagem
      questionCount: 15
    }
  ],
  questions: [
    {
      id: 1,
      question: "Qual é a capital do Brasil?",
      options: ["São Paulo", "Rio de Janeiro", "Brasília", "Belo Horizonte"],
      answer: 2,
      difficulty: "fácil",
      categoryIds: [1] // Associando à categoria "Conhecimentos Gerais"
    },
    {
      id: 2,
      question: "Qual o elemento químico representado pelo símbolo 'O'?",
      options: ["Oxigênio", "Ouro", "Prata", "Zinco"],
      answer: 0,
      difficulty: "fácil",
      categoryIds: [1] // Associando à categoria "Conhecimentos Gerais"
    }
    // Adicione mais perguntas conforme necessário
  ]
};

// Necessário para obter o caminho do diretório atual (em ESModules)
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Caminho absoluto para o db.json
const file = path.join(__dirname, 'db.json');
const adapter = new JSONFile(file);
const db = new Low(adapter, defaultData);

// Inicialização assíncrona
async function init() {
  try {
    console.log('Lendo arquivo db.json...');
    await db.read();

    if (!db.data || typeof db.data !== 'object' || Object.keys(db.data).length === 0) {
      console.log('Arquivo db.json vazio ou inválido. Inicializando com dados padrão...');
      db.data = defaultData;
      await db.write();
    }

    const app = express();

    // Servir a pasta 'categorias' como pasta estática
    app.use('/categorias', express.static(path.join(__dirname, 'categorias')));

    // Servir arquivos estáticos na pasta 'public' (CSS, JS, imagens)
    app.use(express.static(path.join(__dirname, 'public')));

    app.get('/', (req, res) => {
      res.sendFile(path.join(__dirname, 'public', 'index.html'));
    });

    app.get('/api/categories', (req, res) => {
      res.json(db.data.categories);
    });

    // Retornar perguntas de uma categoria específica
    app.get('/api/questions', (req, res) => {
      const categoryId = parseInt(req.query.category);
      if (!categoryId) {
        return res.status(400).json({ error: 'Categoria não especificada.' });
      }

      // Filtra perguntas com base no categoryId
      const questions = db.data.questions.filter(q => q.categoryIds.includes(categoryId));
      if (questions.length > 0) {
        res.json(questions);
      } else {
        res.status(404).json({ message: 'Nenhuma pergunta encontrada para essa categoria.' });
      }
    });

    app.listen(3000, () => {
      console.log('Servidor rodando em http://localhost:3000');
    });
  } catch (error) {
    console.error('Erro na inicialização:', error);
  }
}

init();
